<?php
/*	"Exyks files functions" by Leurent F. (131)
    distributed under the terms of GNU General Public License - Â© 2007 
*/


class charset_map {

	static $_toUtfMap = array(0=>0,1=>1,2=>2,3=>3,4=>4,5=>5,6=>6,7=>7,8=>8,9=>9,10=>10,11=>11,12=>12,13=>13,14=>14,15=>15,16=>16,17=>17,18=>18,19=>19,20=>20,21=>21,22=>22,23=>23,24=>24,25=>25,26=>26,27=>27,28=>28,29=>29,30=>30,31=>31,32=>32,33=>33,34=>34,35=>35,36=>36,37=>37,38=>38,39=>39,40=>40,41=>41,42=>42,43=>43,44=>44,45=>45,46=>46,47=>47,48=>48,49=>49,50=>50,51=>51,52=>52,53=>53,54=>54,55=>55,56=>56,57=>57,58=>58,59=>59,60=>60,61=>61,62=>62,63=>63,64=>64,65=>65,66=>66,67=>67,68=>68,69=>69,70=>70,71=>71,72=>72,73=>73,74=>74,75=>75,76=>76,77=>77,78=>78,79=>79,80=>80,81=>81,82=>82,83=>83,84=>84,85=>85,86=>86,87=>87,88=>88,89=>89,90=>90,91=>91,92=>92,93=>93,94=>94,95=>95,96=>96,97=>97,98=>98,99=>99,100=>100,101=>101,102=>102,103=>103,104=>104,105=>105,106=>106,107=>107,108=>108,109=>109,110=>110,111=>111,112=>112,113=>113,114=>114,115=>115,116=>116,117=>117,118=>118,119=>119,120=>120,121=>121,122=>122,123=>123,124=>124,125=>125,126=>126,127=>127,128=>199,129=>252,130=>233,131=>226,132=>228,133=>224,134=>229,135=>231,136=>234,137=>235,138=>232,139=>239,140=>238,141=>236,142=>196,143=>197,144=>201,145=>230,146=>198,147=>244,148=>246,149=>242,150=>251,151=>249,152=>255,153=>214,154=>220,155=>248,156=>163,157=>216,158=>215,159=>402,160=>225,161=>237,162=>243,163=>250,164=>241,165=>209,166=>170,167=>186,168=>191,169=>174,170=>172,171=>189,172=>188,173=>161,174=>171,175=>187,176=>9617,177=>9618,178=>9619,179=>9474,180=>9508,181=>193,182=>194,183=>192,184=>169,185=>9571,186=>9553,187=>9559,188=>9565,189=>162,190=>165,191=>9488,192=>9492,193=>9524,194=>9516,195=>9500,196=>9472,197=>9532,198=>227,199=>195,200=>9562,201=>9556,202=>9577,203=>9574,204=>9568,205=>9552,206=>9580,207=>164,208=>240,209=>208,210=>202,211=>203,212=>200,213=>305,214=>205,215=>206,216=>207,217=>9496,218=>9484,219=>9608,220=>9604,221=>166,222=>204,223=>9600,224=>211,225=>223,226=>212,227=>210,228=>245,229=>213,230=>181,231=>254,232=>222,233=>218,234=>219,235=>217,236=>253,237=>221,238=>175,239=>180,240=>173,241=>177,242=>8215,243=>190,244=>182,245=>167,246=>247,247=>184,248=>176,249=>168,250=>183,251=>185,252=>179,253=>178,254=>9632,255=>160);
		

    static function Utf8StringEncode($string, $mapping_array)
    {
        $str = '';

        foreach(unpack('C*', $string) as $chr) {
                $char = (int)$mapping_array[$chr];
                $str .= self::CharToUtf8($char);
        }
        return $str;
    }


    static function CharToUtf8($char)
    {
        if ($char < 0x80){
            $utf8_char = chr($char);
            // 2 bytes
        }else if($char<0x800){
            $utf8_char = (chr(0xC0 | $char>>6) . chr(0x80 | $char & 0x3F));
            // 3 bytes
        }else if($char<0x10000){
            $utf8_char = (chr(0xE0 | $char>>12) . chr(0x80 | $char>>6 & 0x3F) . chr(0x80 | $char & 0x3F));
            // 4 bytes
        }else if($char<0x200000){
            $utf8_char = (chr(0xF0 | $char>>18) . chr(0x80 | $char>>12 & 0x3F) . chr(0x80 | $char>>6 & 0x3F) . chr(0x80 | $char & 0x3F));
        }
        return $utf8_char;
    }

    static function Utf8StringDecode($utf_string, $mapping_array)
    {
        $mapping_array = array_flip($mapping_array);
        $chars = unpack('C*', $utf_string);
        $count = count($chars);
        $result = '';
        for ($i=1;$i<=$count;$i++){
            $result .= self::Utf8ToChar($chars,$i,$mapping_array);
        }
        return $result;
   }

    static function Utf8ToChar($chars, &$id, $mapping_array)
    {
        if(($chars[$id]>=240)&&($chars[$id]<=255)){
            $utf=(intval($chars[$id]-240)<<18)+(intval($chars[++$id]-128)<<12)+(intval($chars[++$id]-128)<<6)+(intval($chars[++$id]-128)<<0);
        }elseif(($chars[$id]>=224)&&($chars[$id]<=239)){
            $utf=(intval($chars[$id]-224)<<12)+(intval($chars[++$id]-128)<<6)+(intval($chars[++$id]-128)<<0);
        }elseif(($chars[$id]>=192)&&($chars[$id]<=223)){
            $utf=(intval($chars[$id]-192)<<6)+(intval($chars[++$id]-128)<<0);
        }else{
            $utf=$chars[$id];
        }

        return chr($mapping_array[$utf]);

    }


}

